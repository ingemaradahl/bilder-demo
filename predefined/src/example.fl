import "inc/colors.fl";

Color twist(Image input_img, Vec2 center, Float radius, Float angle, Float x, Float y)
{
	Vec2 p = Vec2(x,y) - center;
	Float dist = length(p);

	if (dist < radius)
	{
		Float percent = (radius-dist)/radius;
		Float theta = percent*percent*angle;
		Float s = sin(theta);
		Float c = cos(theta);

		p = Vec2(p.x*c-p.y*s, p.x*s+p.y*c);
	}
	return input_img(p+center);
}

Color main(Float x, Float y)
{
	external Image img_in;
	external Vec2  center;
	external Float radius;
	external Float angle;

	Color border(Color c, Float x, Float y) {
		if (x > 1.0 || y > 1.0 || x < 0.0 || y < 0.0)
			return c;
		else
			return img_in(x,y);
	};

	Image twisted = twist(border(Color(0.0)), center, radius, angle); // Partial application
	Image supah_twisted = twist(twisted, center/Vec2(2.0), radius, angle);
	return grayscale(supah_twisted(x,y));
}

